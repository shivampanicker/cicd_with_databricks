name: Pull Request on main branch
on:
  pull_request:
    branches: [main]
    types: [assigned, opened, synchronize, reopened]
jobs:
  linting:
    runs-on: ubuntu-latest
    env:
      DATABRICKS_HOST: ${{ secrets['DATABRICKS_HOST_PRD'] }}
      DATABRICKS_TOKEN: ${{ secrets['DATABRICKS_TOKEN_PRD'] }}
      ENV: prod
    steps:
      - uses: actions/checkout@v2.3.4
      - uses: actions/setup-python@v2

      - name: Installing Dependancies
        run: |
          pip install -r ./unit-testing-requirements.txt
      
      - name: Running flake8
        run: flake8 --ignore=C901,E402,E999,F821,F403,F405 --max-line-length=127 ./src/main/python

  run-unit-tests:
   needs:
     - linting
   runs-on: ubuntu-latest
   
   steps:
     - name: Checkout repo
       uses: actions/checkout@v2
     - name: Run a databricks notebook
       uses: databricks/run-notebook@v0
       with:
         local-notebook-path: ./src/main/tests/test_all.py        
         notebook-params-json: >
           {
             "num_rows":"1000",
             "env":"local"
           }
         databricks-host: ${{secrets.DATABRICKS_HOST_PRD}}
         databricks-token: ${{secrets.DATABRICKS_TOKEN_PRD}}
         new-cluster-json: >
           {
             "num_workers": 1,

           }
           
  run-integration-tests:
   needs:
     - run-unit-tests
   runs-on: ubuntu-latest
   
   steps:
     - name: Checkout repo
       uses: actions/checkout@v2
     - name: Run a databricks notebook
       uses: databricks/run-notebook@v0
       with:
         local-notebook-path: ./src/main/tests/integration_suite/integration_tests.py     
         notebook-params-json: >
           {
             "num_rows":"1000",
             "env":"int"
           }
         databricks-host: ${{secrets.DATABRICKS_HOST_PRD}}
         databricks-token: ${{secrets.DATABRICKS_TOKEN_PRD}}
         new-cluster-json: >
           {
             "num_workers": 1,
             
           }